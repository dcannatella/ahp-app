library(Matrix)

# modules/mod_pairwise_server.R
# In modules/mod_pairwise_server.R or wherever you handle the pairwise comparisons
mod_pairwise_server <- function(id, hierarchy_data) {
  moduleServer(id, function(input, output, session) {
    ns <- session$ns

    ### Generate nodes needing pairwise comparison
    get_comparison_nodes <- reactive({
      req(hierarchy_data())

      # Check if hierarchy_data() is structured as expected
      str(hierarchy_data())  # Inspect the structure of the hierarchy

      # Assuming Traverse() works, otherwise adapt as needed
      hierarchy_data()$Traverse(
        traversal = "level",
        filterFun = function(node) node$childrenCount > 1
      )
    })
    

    ### INPUT PREFERENCES (tab 2)
    output$pairwise_comparisons_ui <- renderUI({
      req(get_comparison_nodes())
      nodes <- get_comparison_nodes()

      tabsetPanel(
        id = ns("comparison_tabset"),
        type = "tabs",
        lapply(nodes, function(node) {
          child_names <- names(node$children)
          tabPanel(
            title = paste("Compare:", node$name),
            h5(paste("Pairwise comparisons for:", node$name)),
            build_pairwise_inputs(ns, node$name, child_names)
          )
        })
      )
    })

    ### RECAP (tab 1)
    output$recap_text <- renderUI({
      req(hierarchy_data())
      HTML(paste("Total nodes in hierarchy:", hierarchy_data()$totalCount))
    })

    ### MATRICES & CONSISTENCY (tab 3)
    output$matrix_output_ui <- renderUI({
      # Placeholder â€“ replace with real output later
      tagList(
        h4("Saaty Matrices"),
        p("Matrix and consistency info will be shown here.")
      )
    })

    ### PAIRWISE MATRICES (tab 4)
    output$pairwise_matrices_ui <- renderUI({
      tagList(
        h4("Final Weighted Matrices"),
        p("This section can display heatmaps or matrices.")
      )
    })
  })
}
